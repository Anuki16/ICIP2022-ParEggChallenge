2023/11/02 13:33:30 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]
    CUDA available: False
    numpy_random_seed: 344127701
    GCC: gcc (Ubuntu 7.5.0-6ubuntu2) 7.5.0
    PyTorch: 1.11.0+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.12.0+cu113
    OpenCV: 4.8.0
    MMEngine: 0.9.0

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 344127701
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/11/02 13:33:32 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
base_lr = 8e-05
checkpoint = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
custom_hooks = [
    dict(
        switch_epoch=24,
        switch_pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.1,
                    2.0,
                ),
                scale=(
                    640,
                    640,
                ),
                type='RandomResize'),
            dict(crop_size=(
                640,
                640,
            ), type='RandomCrop'),
            dict(type='YOLOXHSVRandomAug'),
            dict(prob=0.5, type='RandomFlip'),
            dict(
                pad_val=dict(img=(
                    114,
                    114,
                    114,
                )),
                size=(
                    640,
                    640,
                ),
                type='Pad'),
            dict(type='PackDetInputs'),
        ],
        type='PipelineSwitchHook'),
]
data_root = '/home/anuki/ICIP2022-ParEggChallenge/sliced_data/sliced_data/cut_960x1280'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=5, max_keep_ckpts=2, save_best='auto', type='CheckpointHook'),
    logger=dict(interval=5, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_scales = [
    (
        640,
        640,
    ),
    (
        320,
        320,
    ),
    (
        960,
        960,
    ),
]
interval = 10
launcher = 'none'
load_from = '/home/anuki/ICIP2022-ParEggChallenge/checkpoints/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 30
metainfo = dict(
    classes=(
        'Ascaris lumbricoides',
        'Capillaria philippinensis',
        'Enterobius vermicularis',
        'Fasciolopsis buski',
        'Hookworm egg',
        'Hymenolepis diminuta',
        'Hymenolepis nana',
        'Opisthorchis viverrine',
        'Paragonimus spp',
        'Taenia spp. egg',
        'Trichuris trichiura',
    ),
    palette=[
        (
            220,
            20,
            60,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            255,
            0,
        ),
        (
            0,
            0,
            255,
        ),
        (
            255,
            100,
            0,
        ),
        (
            100,
            255,
            0,
        ),
        (
            100,
            255,
            255,
        ),
        (
            255,
            100,
            100,
        ),
        (
            100,
            255,
            100,
        ),
        (
            100,
            100,
            255,
        ),
        (
            255,
            255,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        act_cfg=dict(inplace=True, type='SiLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=0.167,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        type='CSPNeXt',
        widen_factor=0.375),
    bbox_head=dict(
        act_cfg=dict(inplace=True, type='SiLU'),
        anchor_generator=dict(
            offset=0, strides=[
                8,
                16,
                32,
            ], type='MlvlPointGenerator'),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        exp_on_reg=False,
        feat_channels=96,
        in_channels=96,
        loss_bbox=dict(loss_weight=2.0, type='GIoULoss'),
        loss_cls=dict(
            beta=2.0,
            loss_weight=1.0,
            type='QualityFocalLoss',
            use_sigmoid=True),
        norm_cfg=dict(type='SyncBN'),
        num_classes=11,
        pred_kernel_size=1,
        share_conv=True,
        stacked_convs=2,
        type='RTMDetSepBNHead',
        with_objectness=False),
    data_preprocessor=dict(
        batch_augments=None,
        bgr_to_rgb=False,
        mean=[
            103.53,
            116.28,
            123.675,
        ],
        std=[
            57.375,
            57.12,
            58.395,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        act_cfg=dict(inplace=True, type='SiLU'),
        expand_ratio=0.5,
        in_channels=[
            96,
            192,
            384,
        ],
        norm_cfg=dict(type='SyncBN'),
        num_csp_blocks=1,
        out_channels=96,
        type='CSPNeXtPAFPN'),
    test_cfg=dict(
        max_per_img=300,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.65, type='nms'),
        nms_pre=30000,
        score_thr=0.001),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(topk=13, type='DynamicSoftLabelAssigner'),
        debug=False,
        pos_weight=-1),
    type='RTMDet')
optim_wrapper = dict(
    optimizer=dict(lr=8e-05, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=10, start_factor=1e-05, type='LinearLR'),
    dict(
        T_max=0,
        begin=15,
        by_epoch=True,
        convert_to_iter_based=True,
        end=30,
        eta_min=4.000000000000001e-06,
        type='CosineAnnealingLR'),
]
resume = False
split_root = '/home/anuki/ICIP2022-ParEggChallenge/5-fold/fold-1/'
stage2_num_epochs = 6
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=5,
    dataset=dict(
        ann_file=
        '/home/anuki/ICIP2022-ParEggChallenge/5-fold/fold-1/cut_960x1280_val.json',
        backend_args=None,
        data_prefix=dict(img=''),
        data_root=
        '/home/anuki/ICIP2022-ParEggChallenge/sliced_data/sliced_data/cut_960x1280',
        metainfo=dict(
            classes=(
                'Ascaris lumbricoides',
                'Capillaria philippinensis',
                'Enterobius vermicularis',
                'Fasciolopsis buski',
                'Hookworm egg',
                'Hymenolepis diminuta',
                'Hymenolepis nana',
                'Opisthorchis viverrine',
                'Paragonimus spp',
                'Taenia spp. egg',
                'Trichuris trichiura',
            ),
            palette=[
                (
                    220,
                    20,
                    60,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    255,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
                (
                    255,
                    100,
                    0,
                ),
                (
                    100,
                    255,
                    0,
                ),
                (
                    100,
                    255,
                    255,
                ),
                (
                    255,
                    100,
                    100,
                ),
                (
                    100,
                    255,
                    100,
                ),
                (
                    100,
                    100,
                    255,
                ),
                (
                    255,
                    255,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                640,
                640,
            ), type='Resize'),
            dict(
                pad_val=dict(img=(
                    114,
                    114,
                    114,
                )),
                size=(
                    640,
                    640,
                ),
                type='Pad'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=10,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file=
    '/home/anuki/ICIP2022-ParEggChallenge/5-fold/fold-1/cut_960x1280_val.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    proposal_nums=(
        100,
        1,
        10,
    ),
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        640,
        640,
    ), type='Resize'),
    dict(pad_val=dict(img=(
        114,
        114,
        114,
    )), size=(
        640,
        640,
    ), type='Pad'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_batch_size_per_gpu = 4
train_cfg = dict(
    dynamic_intervals=[
        (
            280,
            1,
        ),
    ],
    max_epochs=30,
    type='EpochBasedTrainLoop',
    val_interval=1)
train_dataloader = dict(
    batch_sampler=None,
    batch_size=4,
    dataset=dict(
        ann_file=
        '/home/anuki/ICIP2022-ParEggChallenge/5-fold/fold-1/cut_960x1280_train.json',
        backend_args=None,
        data_prefix=dict(img=''),
        data_root=
        '/home/anuki/ICIP2022-ParEggChallenge/sliced_data/sliced_data/cut_960x1280',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(
            classes=(
                'Ascaris lumbricoides',
                'Capillaria philippinensis',
                'Enterobius vermicularis',
                'Fasciolopsis buski',
                'Hookworm egg',
                'Hymenolepis diminuta',
                'Hymenolepis nana',
                'Opisthorchis viverrine',
                'Paragonimus spp',
                'Taenia spp. egg',
                'Trichuris trichiura',
            ),
            palette=[
                (
                    220,
                    20,
                    60,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    255,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
                (
                    255,
                    100,
                    0,
                ),
                (
                    100,
                    255,
                    0,
                ),
                (
                    100,
                    255,
                    255,
                ),
                (
                    255,
                    100,
                    100,
                ),
                (
                    100,
                    255,
                    100,
                ),
                (
                    100,
                    100,
                    255,
                ),
                (
                    255,
                    255,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                img_scale=(
                    640,
                    640,
                ),
                max_cached_images=20,
                pad_val=114.0,
                random_pop=False,
                type='CachedMosaic'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    1280,
                    1280,
                ),
                type='RandomResize'),
            dict(crop_size=(
                640,
                640,
            ), type='RandomCrop'),
            dict(type='YOLOXHSVRandomAug'),
            dict(prob=0.5, type='RandomFlip'),
            dict(
                pad_val=dict(img=(
                    114,
                    114,
                    114,
                )),
                size=(
                    640,
                    640,
                ),
                type='Pad'),
            dict(
                img_scale=(
                    640,
                    640,
                ),
                max_cached_images=10,
                pad_val=(
                    114,
                    114,
                    114,
                ),
                prob=0.5,
                random_pop=False,
                ratio_range=(
                    1.0,
                    1.0,
                ),
                type='CachedMixUp'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=2,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_num_workers = 2
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        img_scale=(
            640,
            640,
        ),
        max_cached_images=20,
        pad_val=114.0,
        random_pop=False,
        type='CachedMosaic'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            1280,
            1280,
        ),
        type='RandomResize'),
    dict(crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(type='YOLOXHSVRandomAug'),
    dict(prob=0.5, type='RandomFlip'),
    dict(pad_val=dict(img=(
        114,
        114,
        114,
    )), size=(
        640,
        640,
    ), type='Pad'),
    dict(
        img_scale=(
            640,
            640,
        ),
        max_cached_images=10,
        pad_val=(
            114,
            114,
            114,
        ),
        prob=0.5,
        random_pop=False,
        ratio_range=(
            1.0,
            1.0,
        ),
        type='CachedMixUp'),
    dict(type='PackDetInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.1,
            2.0,
        ),
        scale=(
            640,
            640,
        ),
        type='RandomResize'),
    dict(crop_size=(
        640,
        640,
    ), type='RandomCrop'),
    dict(type='YOLOXHSVRandomAug'),
    dict(prob=0.5, type='RandomFlip'),
    dict(pad_val=dict(img=(
        114,
        114,
        114,
    )), size=(
        640,
        640,
    ), type='Pad'),
    dict(type='PackDetInputs'),
]
tta_model = dict(
    tta_cfg=dict(max_per_img=100, nms=dict(iou_threshold=0.6, type='nms')),
    type='DetTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale=(
                    640,
                    640,
                ), type='Resize'),
                dict(keep_ratio=True, scale=(
                    320,
                    320,
                ), type='Resize'),
                dict(keep_ratio=True, scale=(
                    960,
                    960,
                ), type='Resize'),
            ],
            [
                dict(prob=1.0, type='RandomFlip'),
                dict(prob=0.0, type='RandomFlip'),
            ],
            [
                dict(
                    pad_val=dict(img=(
                        114,
                        114,
                        114,
                    )),
                    size=(
                        960,
                        960,
                    ),
                    type='Pad'),
            ],
            [
                dict(type='LoadAnnotations', with_bbox=True),
            ],
            [
                dict(
                    meta_keys=(
                        'img_id',
                        'img_path',
                        'ori_shape',
                        'img_shape',
                        'scale_factor',
                        'flip',
                        'flip_direction',
                    ),
                    type='PackDetInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=5,
    dataset=dict(
        ann_file=
        '/home/anuki/ICIP2022-ParEggChallenge/5-fold/fold-1/cut_960x1280_val.json',
        backend_args=None,
        data_prefix=dict(img=''),
        data_root=
        '/home/anuki/ICIP2022-ParEggChallenge/sliced_data/sliced_data/cut_960x1280',
        metainfo=dict(
            classes=(
                'Ascaris lumbricoides',
                'Capillaria philippinensis',
                'Enterobius vermicularis',
                'Fasciolopsis buski',
                'Hookworm egg',
                'Hymenolepis diminuta',
                'Hymenolepis nana',
                'Opisthorchis viverrine',
                'Paragonimus spp',
                'Taenia spp. egg',
                'Trichuris trichiura',
            ),
            palette=[
                (
                    220,
                    20,
                    60,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    255,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
                (
                    255,
                    100,
                    0,
                ),
                (
                    100,
                    255,
                    0,
                ),
                (
                    100,
                    255,
                    255,
                ),
                (
                    255,
                    100,
                    100,
                ),
                (
                    100,
                    255,
                    100,
                ),
                (
                    100,
                    100,
                    255,
                ),
                (
                    255,
                    255,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                640,
                640,
            ), type='Resize'),
            dict(
                pad_val=dict(img=(
                    114,
                    114,
                    114,
                )),
                size=(
                    640,
                    640,
                ),
                type='Pad'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=10,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file=
    '/home/anuki/ICIP2022-ParEggChallenge/5-fold/fold-1/cut_960x1280_val.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    proposal_nums=(
        100,
        1,
        10,
    ),
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = './work_dirs/basic_config'

2023/11/02 13:33:36 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/11/02 13:33:36 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/11/02 13:33:39 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
2023/11/02 13:33:41 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([12, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.conv.weight - torch.Size([12, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.conv.weight - torch.Size([24, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.conv.weight - torch.Size([48, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([24, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([24, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.conv.weight - torch.Size([96, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.conv.weight - torch.Size([192, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.conv.weight - torch.Size([384, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([384, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

neck.reduce_layers.0.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([96, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([96, 384, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([11, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([11]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([11, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([11]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([11, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([11]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/11/02 13:33:42 - mmengine - INFO - Load checkpoint from /home/anuki/ICIP2022-ParEggChallenge/checkpoints/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
2023/11/02 13:33:42 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/11/02 13:33:42 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/11/02 13:33:42 - mmengine - INFO - Checkpoints will be saved to /home/anuki/ICIP2022-ParEggChallenge/work_dirs/basic_config.
2023/11/02 13:33:49 - mmengine - INFO - Epoch(train)  [1][   5/5119]  base_lr: 3.5556e-05 lr: 3.5556e-05  eta: 2 days, 15:05:37  time: 1.4791  data_time: 0.1177  loss: 2.7711  loss_cls: 2.0964  loss_bbox: 0.6747
2023/11/02 13:33:56 - mmengine - INFO - Epoch(train)  [1][  10/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 13:01:51  time: 1.4308  data_time: 0.0711  loss: 2.7874  loss_cls: 2.1286  loss_bbox: 0.6588
2023/11/02 13:34:03 - mmengine - INFO - Epoch(train)  [1][  15/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 11:09:33  time: 1.3870  data_time: 0.0553  loss: 2.8295  loss_cls: 2.1938  loss_bbox: 0.6357
2023/11/02 13:34:09 - mmengine - INFO - Epoch(train)  [1][  20/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 10:10:01  time: 1.3637  data_time: 0.0475  loss: 2.8126  loss_cls: 2.1763  loss_bbox: 0.6363
2023/11/02 13:34:16 - mmengine - INFO - Epoch(train)  [1][  25/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 9:50:03  time: 1.3560  data_time: 0.0418  loss: 2.8293  loss_cls: 2.2054  loss_bbox: 0.6239
2023/11/02 13:34:22 - mmengine - INFO - Epoch(train)  [1][  30/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 9:21:56  time: 1.3450  data_time: 0.0383  loss: 2.8276  loss_cls: 2.2126  loss_bbox: 0.6149
2023/11/02 13:34:29 - mmengine - INFO - Epoch(train)  [1][  35/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 9:07:51  time: 1.3396  data_time: 0.0353  loss: 2.8366  loss_cls: 2.2290  loss_bbox: 0.6076
2023/11/02 13:34:35 - mmengine - INFO - Epoch(train)  [1][  40/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 9:12:54  time: 1.3416  data_time: 0.0341  loss: 2.8650  loss_cls: 2.2727  loss_bbox: 0.5924
2023/11/02 13:34:42 - mmengine - INFO - Epoch(train)  [1][  45/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:58:00  time: 1.3358  data_time: 0.0335  loss: 2.8823  loss_cls: 2.3017  loss_bbox: 0.5806
2023/11/02 13:34:48 - mmengine - INFO - Epoch(train)  [1][  50/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:47:50  time: 1.3319  data_time: 0.0329  loss: 2.8959  loss_cls: 2.3268  loss_bbox: 0.5691
2023/11/02 13:34:55 - mmengine - INFO - Epoch(train)  [1][  55/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:44:00  time: 1.3156  data_time: 0.0238  loss: 2.9282  loss_cls: 2.3838  loss_bbox: 0.5444
2023/11/02 13:35:01 - mmengine - INFO - Epoch(train)  [1][  60/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:34:34  time: 1.3060  data_time: 0.0234  loss: 2.9378  loss_cls: 2.4096  loss_bbox: 0.5282
2023/11/02 13:35:08 - mmengine - INFO - Epoch(train)  [1][  65/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:37:04  time: 1.3101  data_time: 0.0237  loss: 2.9355  loss_cls: 2.4170  loss_bbox: 0.5185
2023/11/02 13:35:15 - mmengine - INFO - Epoch(train)  [1][  70/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:40:16  time: 1.3152  data_time: 0.0236  loss: 2.9424  loss_cls: 2.4422  loss_bbox: 0.5003
2023/11/02 13:35:21 - mmengine - INFO - Epoch(train)  [1][  75/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:38:21  time: 1.3146  data_time: 0.0237  loss: 2.9391  loss_cls: 2.4491  loss_bbox: 0.4900
2023/11/02 13:35:28 - mmengine - INFO - Epoch(train)  [1][  80/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:34:03  time: 1.3158  data_time: 0.0235  loss: 2.9438  loss_cls: 2.4748  loss_bbox: 0.4690
2023/11/02 13:35:34 - mmengine - INFO - Epoch(train)  [1][  85/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:15  time: 1.3147  data_time: 0.0240  loss: 2.9376  loss_cls: 2.4858  loss_bbox: 0.4518
2023/11/02 13:35:41 - mmengine - INFO - Epoch(train)  [1][  90/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:20  time: 1.3075  data_time: 0.0232  loss: 2.9038  loss_cls: 2.4643  loss_bbox: 0.4396
2023/11/02 13:35:47 - mmengine - INFO - Epoch(train)  [1][  95/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:16:48  time: 1.3060  data_time: 0.0221  loss: 2.8544  loss_cls: 2.4225  loss_bbox: 0.4319
2023/11/02 13:35:54 - mmengine - INFO - Epoch(train)  [1][ 100/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:10:41  time: 1.3037  data_time: 0.0213  loss: 2.8083  loss_cls: 2.3854  loss_bbox: 0.4229
2023/11/02 13:36:00 - mmengine - INFO - Epoch(train)  [1][ 105/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:13:48  time: 1.3065  data_time: 0.0202  loss: 2.7503  loss_cls: 2.3345  loss_bbox: 0.4158
2023/11/02 13:36:07 - mmengine - INFO - Epoch(train)  [1][ 110/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:18:37  time: 1.3140  data_time: 0.0208  loss: 2.6979  loss_cls: 2.2939  loss_bbox: 0.4039
2023/11/02 13:36:14 - mmengine - INFO - Epoch(train)  [1][ 115/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:38  time: 1.3185  data_time: 0.0199  loss: 2.6374  loss_cls: 2.2508  loss_bbox: 0.3866
2023/11/02 13:36:21 - mmengine - INFO - Epoch(train)  [1][ 120/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:07  time: 1.3206  data_time: 0.0194  loss: 2.5659  loss_cls: 2.1875  loss_bbox: 0.3784
2023/11/02 13:36:28 - mmengine - INFO - Epoch(train)  [1][ 125/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:34:17  time: 1.3255  data_time: 0.0193  loss: 2.5201  loss_cls: 2.1564  loss_bbox: 0.3637
2023/11/02 13:36:34 - mmengine - INFO - Epoch(train)  [1][ 130/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:37:13  time: 1.3311  data_time: 0.0196  loss: 2.4607  loss_cls: 2.0925  loss_bbox: 0.3682
2023/11/02 13:36:41 - mmengine - INFO - Epoch(train)  [1][ 135/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:39:04  time: 1.3365  data_time: 0.0198  loss: 2.3895  loss_cls: 2.0254  loss_bbox: 0.3641
2023/11/02 13:36:48 - mmengine - INFO - Epoch(train)  [1][ 140/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:42:08  time: 1.3444  data_time: 0.0199  loss: 2.3113  loss_cls: 1.9485  loss_bbox: 0.3628
2023/11/02 13:36:55 - mmengine - INFO - Epoch(train)  [1][ 145/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:40:08  time: 1.3479  data_time: 0.0199  loss: 2.2400  loss_cls: 1.8854  loss_bbox: 0.3546
2023/11/02 13:37:01 - mmengine - INFO - Epoch(train)  [1][ 150/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:36:48  time: 1.3497  data_time: 0.0197  loss: 2.1777  loss_cls: 1.8259  loss_bbox: 0.3519
2023/11/02 13:37:08 - mmengine - INFO - Epoch(train)  [1][ 155/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:37:39  time: 1.3493  data_time: 0.0203  loss: 2.0965  loss_cls: 1.7470  loss_bbox: 0.3495
2023/11/02 13:37:15 - mmengine - INFO - Epoch(train)  [1][ 160/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:39:54  time: 1.3490  data_time: 0.0198  loss: 2.0342  loss_cls: 1.6887  loss_bbox: 0.3454
2023/11/02 13:37:21 - mmengine - INFO - Epoch(train)  [1][ 165/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:39:19  time: 1.3428  data_time: 0.0201  loss: 1.9794  loss_cls: 1.6346  loss_bbox: 0.3448
2023/11/02 13:37:28 - mmengine - INFO - Epoch(train)  [1][ 170/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:37:49  time: 1.3373  data_time: 0.0204  loss: 1.9336  loss_cls: 1.5937  loss_bbox: 0.3399
2023/11/02 13:37:34 - mmengine - INFO - Epoch(train)  [1][ 175/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:38:06  time: 1.3340  data_time: 0.0207  loss: 1.8420  loss_cls: 1.5044  loss_bbox: 0.3376
2023/11/02 13:37:41 - mmengine - INFO - Epoch(train)  [1][ 180/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:37:05  time: 1.3298  data_time: 0.0203  loss: 1.7840  loss_cls: 1.4519  loss_bbox: 0.3321
2023/11/02 13:37:47 - mmengine - INFO - Epoch(train)  [1][ 185/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:34:55  time: 1.3248  data_time: 0.0199  loss: 1.7316  loss_cls: 1.3961  loss_bbox: 0.3354
2023/11/02 13:37:54 - mmengine - INFO - Epoch(train)  [1][ 190/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:34:23  time: 1.3206  data_time: 0.0202  loss: 1.6995  loss_cls: 1.3649  loss_bbox: 0.3346
2023/11/02 13:38:01 - mmengine - INFO - Epoch(train)  [1][ 195/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:33:38  time: 1.3215  data_time: 0.0206  loss: 1.7040  loss_cls: 1.3667  loss_bbox: 0.3373
2023/11/02 13:38:07 - mmengine - INFO - Epoch(train)  [1][ 200/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:37  time: 1.3205  data_time: 0.0210  loss: 1.6696  loss_cls: 1.3351  loss_bbox: 0.3345
2023/11/02 13:38:13 - mmengine - INFO - Epoch(train)  [1][ 205/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:58  time: 1.3150  data_time: 0.0204  loss: 1.6495  loss_cls: 1.3194  loss_bbox: 0.3301
2023/11/02 13:38:20 - mmengine - INFO - Epoch(train)  [1][ 210/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:12  time: 1.3107  data_time: 0.0202  loss: 1.6048  loss_cls: 1.2855  loss_bbox: 0.3193
2023/11/02 13:38:27 - mmengine - INFO - Epoch(train)  [1][ 215/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:16  time: 1.3128  data_time: 0.0203  loss: 1.5890  loss_cls: 1.2711  loss_bbox: 0.3178
2023/11/02 13:38:34 - mmengine - INFO - Epoch(train)  [1][ 220/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:56  time: 1.3208  data_time: 0.0202  loss: 1.5676  loss_cls: 1.2580  loss_bbox: 0.3095
2023/11/02 13:38:40 - mmengine - INFO - Epoch(train)  [1][ 225/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:27  time: 1.3211  data_time: 0.0200  loss: 1.5569  loss_cls: 1.2549  loss_bbox: 0.3021
2023/11/02 13:38:47 - mmengine - INFO - Epoch(train)  [1][ 230/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:12  time: 1.3202  data_time: 0.0203  loss: 1.5322  loss_cls: 1.2358  loss_bbox: 0.2963
2023/11/02 13:38:54 - mmengine - INFO - Epoch(train)  [1][ 235/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:32  time: 1.3238  data_time: 0.0203  loss: 1.5386  loss_cls: 1.2516  loss_bbox: 0.2870
2023/11/02 13:39:00 - mmengine - INFO - Epoch(train)  [1][ 240/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:21  time: 1.3186  data_time: 0.0204  loss: 1.5299  loss_cls: 1.2488  loss_bbox: 0.2811
2023/11/02 13:39:07 - mmengine - INFO - Epoch(train)  [1][ 245/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:35  time: 1.3219  data_time: 0.0205  loss: 1.5071  loss_cls: 1.2252  loss_bbox: 0.2818
2023/11/02 13:39:13 - mmengine - INFO - Epoch(train)  [1][ 250/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:48  time: 1.3251  data_time: 0.0206  loss: 1.5037  loss_cls: 1.2247  loss_bbox: 0.2790
2023/11/02 13:39:20 - mmengine - INFO - Epoch(train)  [1][ 255/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:19  time: 1.3284  data_time: 0.0211  loss: 1.4942  loss_cls: 1.2155  loss_bbox: 0.2787
2023/11/02 13:39:27 - mmengine - INFO - Epoch(train)  [1][ 260/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:49  time: 1.3328  data_time: 0.0210  loss: 1.5018  loss_cls: 1.2178  loss_bbox: 0.2840
2023/11/02 13:39:33 - mmengine - INFO - Epoch(train)  [1][ 265/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:22  time: 1.3323  data_time: 0.0209  loss: 1.4750  loss_cls: 1.1947  loss_bbox: 0.2803
2023/11/02 13:39:40 - mmengine - INFO - Epoch(train)  [1][ 270/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:59  time: 1.3253  data_time: 0.0210  loss: 1.4691  loss_cls: 1.1854  loss_bbox: 0.2838
2023/11/02 13:39:47 - mmengine - INFO - Epoch(train)  [1][ 275/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:24  time: 1.3232  data_time: 0.0212  loss: 1.4796  loss_cls: 1.1864  loss_bbox: 0.2932
2023/11/02 13:39:53 - mmengine - INFO - Epoch(train)  [1][ 280/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:34  time: 1.3258  data_time: 0.0212  loss: 1.4644  loss_cls: 1.1748  loss_bbox: 0.2896
2023/11/02 13:40:00 - mmengine - INFO - Epoch(train)  [1][ 285/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:31  time: 1.3251  data_time: 0.0216  loss: 1.4499  loss_cls: 1.1576  loss_bbox: 0.2923
2023/11/02 13:40:07 - mmengine - INFO - Epoch(train)  [1][ 290/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:55  time: 1.3343  data_time: 0.0214  loss: 1.4395  loss_cls: 1.1447  loss_bbox: 0.2947
2023/11/02 13:40:13 - mmengine - INFO - Epoch(train)  [1][ 295/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:33  time: 1.3289  data_time: 0.0211  loss: 1.4290  loss_cls: 1.1395  loss_bbox: 0.2895
2023/11/02 13:40:20 - mmengine - INFO - Epoch(train)  [1][ 300/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:38  time: 1.3307  data_time: 0.0211  loss: 1.4200  loss_cls: 1.1298  loss_bbox: 0.2902
2023/11/02 13:40:27 - mmengine - INFO - Epoch(train)  [1][ 305/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:12  time: 1.3355  data_time: 0.0214  loss: 1.4336  loss_cls: 1.1385  loss_bbox: 0.2951
2023/11/02 13:40:33 - mmengine - INFO - Epoch(train)  [1][ 310/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:08  time: 1.3350  data_time: 0.0218  loss: 1.4251  loss_cls: 1.1281  loss_bbox: 0.2970
2023/11/02 13:40:40 - mmengine - INFO - Epoch(train)  [1][ 315/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:32  time: 1.3300  data_time: 0.0221  loss: 1.4207  loss_cls: 1.1226  loss_bbox: 0.2980
2023/11/02 13:40:47 - mmengine - INFO - Epoch(train)  [1][ 320/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:04  time: 1.3348  data_time: 0.0218  loss: 1.4238  loss_cls: 1.1234  loss_bbox: 0.3004
2023/11/02 13:40:54 - mmengine - INFO - Epoch(train)  [1][ 325/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:33:38  time: 1.3402  data_time: 0.0221  loss: 1.4197  loss_cls: 1.1230  loss_bbox: 0.2967
2023/11/02 13:41:00 - mmengine - INFO - Epoch(train)  [1][ 330/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:09  time: 1.3363  data_time: 0.0219  loss: 1.4213  loss_cls: 1.1255  loss_bbox: 0.2958
2023/11/02 13:41:07 - mmengine - INFO - Epoch(train)  [1][ 335/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:33:25  time: 1.3399  data_time: 0.0219  loss: 1.4007  loss_cls: 1.1116  loss_bbox: 0.2891
2023/11/02 13:41:14 - mmengine - INFO - Epoch(train)  [1][ 340/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:34:20  time: 1.3394  data_time: 0.0222  loss: 1.3820  loss_cls: 1.0979  loss_bbox: 0.2841
2023/11/02 13:41:20 - mmengine - INFO - Epoch(train)  [1][ 345/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:33:21  time: 1.3401  data_time: 0.0224  loss: 1.3635  loss_cls: 1.0835  loss_bbox: 0.2800
2023/11/02 13:41:27 - mmengine - INFO - Epoch(train)  [1][ 350/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:34:01  time: 1.3420  data_time: 0.0225  loss: 1.3682  loss_cls: 1.0882  loss_bbox: 0.2800
2023/11/02 13:41:34 - mmengine - INFO - Epoch(train)  [1][ 355/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:33:38  time: 1.3374  data_time: 0.0223  loss: 1.3479  loss_cls: 1.0765  loss_bbox: 0.2714
2023/11/02 13:41:40 - mmengine - INFO - Epoch(train)  [1][ 360/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:33:01  time: 1.3336  data_time: 0.0221  loss: 1.3639  loss_cls: 1.0913  loss_bbox: 0.2725
2023/11/02 13:41:46 - mmengine - INFO - Epoch(train)  [1][ 365/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:51  time: 1.3315  data_time: 0.0222  loss: 1.3798  loss_cls: 1.0974  loss_bbox: 0.2824
2023/11/02 13:41:53 - mmengine - INFO - Epoch(train)  [1][ 370/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:54  time: 1.3250  data_time: 0.0222  loss: 1.3653  loss_cls: 1.0893  loss_bbox: 0.2760
2023/11/02 13:42:00 - mmengine - INFO - Epoch(train)  [1][ 375/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:14  time: 1.3191  data_time: 0.0221  loss: 1.3477  loss_cls: 1.0767  loss_bbox: 0.2710
2023/11/02 13:42:06 - mmengine - INFO - Epoch(train)  [1][ 380/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:20  time: 1.3201  data_time: 0.0226  loss: 1.3635  loss_cls: 1.0869  loss_bbox: 0.2765
2023/11/02 13:42:12 - mmengine - INFO - Epoch(train)  [1][ 385/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:54  time: 1.3124  data_time: 0.0224  loss: 1.3727  loss_cls: 1.0905  loss_bbox: 0.2823
2023/11/02 13:42:19 - mmengine - INFO - Epoch(train)  [1][ 390/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:06  time: 1.3043  data_time: 0.0223  loss: 1.3752  loss_cls: 1.0950  loss_bbox: 0.2803
2023/11/02 13:42:26 - mmengine - INFO - Epoch(train)  [1][ 395/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:03  time: 1.3065  data_time: 0.0225  loss: 1.3624  loss_cls: 1.0854  loss_bbox: 0.2770
2023/11/02 13:42:32 - mmengine - INFO - Epoch(train)  [1][ 400/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:43  time: 1.3034  data_time: 0.0222  loss: 1.3462  loss_cls: 1.0724  loss_bbox: 0.2738
2023/11/02 13:42:39 - mmengine - INFO - Epoch(train)  [1][ 405/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:33  time: 1.3005  data_time: 0.0222  loss: 1.3392  loss_cls: 1.0677  loss_bbox: 0.2715
2023/11/02 13:42:45 - mmengine - INFO - Epoch(train)  [1][ 410/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:22:38  time: 1.2990  data_time: 0.0221  loss: 1.3116  loss_cls: 1.0507  loss_bbox: 0.2608
2023/11/02 13:42:51 - mmengine - INFO - Epoch(train)  [1][ 415/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:13  time: 1.3002  data_time: 0.0220  loss: 1.3024  loss_cls: 1.0537  loss_bbox: 0.2487
2023/11/02 13:42:58 - mmengine - INFO - Epoch(train)  [1][ 420/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:22:12  time: 1.3060  data_time: 0.0221  loss: 1.3286  loss_cls: 1.0705  loss_bbox: 0.2581
2023/11/02 13:43:05 - mmengine - INFO - Epoch(train)  [1][ 425/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:50  time: 1.3131  data_time: 0.0218  loss: 1.3288  loss_cls: 1.0715  loss_bbox: 0.2573
2023/11/02 13:43:12 - mmengine - INFO - Epoch(train)  [1][ 430/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:03  time: 1.3131  data_time: 0.0214  loss: 1.3043  loss_cls: 1.0554  loss_bbox: 0.2489
2023/11/02 13:43:18 - mmengine - INFO - Epoch(train)  [1][ 435/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:42  time: 1.3195  data_time: 0.0213  loss: 1.2977  loss_cls: 1.0518  loss_bbox: 0.2459
2023/11/02 13:43:25 - mmengine - INFO - Epoch(train)  [1][ 440/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:22:43  time: 1.3215  data_time: 0.0208  loss: 1.2995  loss_cls: 1.0518  loss_bbox: 0.2477
2023/11/02 13:43:31 - mmengine - INFO - Epoch(train)  [1][ 445/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:22:07  time: 1.3196  data_time: 0.0203  loss: 1.3050  loss_cls: 1.0532  loss_bbox: 0.2518
2023/11/02 13:43:38 - mmengine - INFO - Epoch(train)  [1][ 450/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:10  time: 1.3173  data_time: 0.0203  loss: 1.2840  loss_cls: 1.0385  loss_bbox: 0.2455
2023/11/02 13:43:45 - mmengine - INFO - Epoch(train)  [1][ 455/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:24  time: 1.3217  data_time: 0.0203  loss: 1.2911  loss_cls: 1.0429  loss_bbox: 0.2482
2023/11/02 13:43:51 - mmengine - INFO - Epoch(train)  [1][ 460/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:29  time: 1.3250  data_time: 0.0204  loss: 1.3083  loss_cls: 1.0512  loss_bbox: 0.2571
2023/11/02 13:43:58 - mmengine - INFO - Epoch(train)  [1][ 465/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:20:52  time: 1.3274  data_time: 0.0202  loss: 1.2919  loss_cls: 1.0331  loss_bbox: 0.2588
2023/11/02 13:44:04 - mmengine - INFO - Epoch(train)  [1][ 470/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:20:31  time: 1.3229  data_time: 0.0204  loss: 1.2600  loss_cls: 1.0074  loss_bbox: 0.2527
2023/11/02 13:44:11 - mmengine - INFO - Epoch(train)  [1][ 475/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:24  time: 1.3208  data_time: 0.0208  loss: 1.2532  loss_cls: 0.9994  loss_bbox: 0.2539
2023/11/02 13:44:18 - mmengine - INFO - Epoch(train)  [1][ 480/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:04  time: 1.3222  data_time: 0.0208  loss: 1.2546  loss_cls: 0.9989  loss_bbox: 0.2557
2023/11/02 13:44:24 - mmengine - INFO - Epoch(train)  [1][ 485/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:13  time: 1.3205  data_time: 0.0208  loss: 1.2494  loss_cls: 0.9948  loss_bbox: 0.2546
2023/11/02 13:44:31 - mmengine - INFO - Epoch(train)  [1][ 490/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:20:38  time: 1.3217  data_time: 0.0212  loss: 1.2603  loss_cls: 1.0042  loss_bbox: 0.2561
2023/11/02 13:44:38 - mmengine - INFO - Epoch(train)  [1][ 495/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:20:21  time: 1.3227  data_time: 0.0217  loss: 1.2470  loss_cls: 0.9946  loss_bbox: 0.2524
2023/11/02 13:44:44 - mmengine - INFO - Epoch(train)  [1][ 500/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:19:18  time: 1.3219  data_time: 0.0215  loss: 1.2642  loss_cls: 0.9945  loss_bbox: 0.2697
2023/11/02 13:44:51 - mmengine - INFO - Epoch(train)  [1][ 505/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:20:05  time: 1.3242  data_time: 0.0218  loss: 1.2532  loss_cls: 0.9843  loss_bbox: 0.2688
2023/11/02 13:44:58 - mmengine - INFO - Epoch(train)  [1][ 510/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:10  time: 1.3283  data_time: 0.0217  loss: 1.2510  loss_cls: 0.9795  loss_bbox: 0.2714
2023/11/02 13:45:04 - mmengine - INFO - Epoch(train)  [1][ 515/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:14  time: 1.3309  data_time: 0.0218  loss: 1.2520  loss_cls: 0.9862  loss_bbox: 0.2658
2023/11/02 13:45:11 - mmengine - INFO - Epoch(train)  [1][ 520/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:20:45  time: 1.3303  data_time: 0.0216  loss: 1.2440  loss_cls: 0.9839  loss_bbox: 0.2600
2023/11/02 13:45:17 - mmengine - INFO - Epoch(train)  [1][ 525/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:19:50  time: 1.3233  data_time: 0.0211  loss: 1.2529  loss_cls: 0.9930  loss_bbox: 0.2599
2023/11/02 13:45:24 - mmengine - INFO - Epoch(train)  [1][ 530/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:18:29  time: 1.3190  data_time: 0.0213  loss: 1.2554  loss_cls: 0.9871  loss_bbox: 0.2683
2023/11/02 13:45:31 - mmengine - INFO - Epoch(train)  [1][ 535/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:19:16  time: 1.3217  data_time: 0.0211  loss: 1.2578  loss_cls: 0.9874  loss_bbox: 0.2704
2023/11/02 13:45:37 - mmengine - INFO - Epoch(train)  [1][ 540/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:20:24  time: 1.3288  data_time: 0.0212  loss: 1.2389  loss_cls: 0.9733  loss_bbox: 0.2656
2023/11/02 13:45:44 - mmengine - INFO - Epoch(train)  [1][ 545/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:27  time: 1.3344  data_time: 0.0207  loss: 1.2573  loss_cls: 0.9921  loss_bbox: 0.2652
2023/11/02 13:45:51 - mmengine - INFO - Epoch(train)  [1][ 550/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:34  time: 1.3391  data_time: 0.0206  loss: 1.2566  loss_cls: 1.0047  loss_bbox: 0.2518
2023/11/02 13:45:58 - mmengine - INFO - Epoch(train)  [1][ 555/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:22:04  time: 1.3384  data_time: 0.0204  loss: 1.2582  loss_cls: 1.0064  loss_bbox: 0.2519
2023/11/02 13:46:04 - mmengine - INFO - Epoch(train)  [1][ 560/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:22:19  time: 1.3353  data_time: 0.0202  loss: 1.2473  loss_cls: 0.9997  loss_bbox: 0.2476
2023/11/02 13:46:12 - mmengine - INFO - Epoch(train)  [1][ 565/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:07  time: 1.3432  data_time: 0.0205  loss: 1.2469  loss_cls: 0.9976  loss_bbox: 0.2494
2023/11/02 13:46:19 - mmengine - INFO - Epoch(train)  [1][ 570/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:30  time: 1.3515  data_time: 0.0208  loss: 1.2626  loss_cls: 1.0069  loss_bbox: 0.2557
2023/11/02 13:46:25 - mmengine - INFO - Epoch(train)  [1][ 575/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:41  time: 1.3609  data_time: 0.0210  loss: 1.2476  loss_cls: 0.9925  loss_bbox: 0.2551
2023/11/02 13:46:32 - mmengine - INFO - Epoch(train)  [1][ 580/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:41  time: 1.3668  data_time: 0.0212  loss: 1.2347  loss_cls: 0.9900  loss_bbox: 0.2446
2023/11/02 13:46:39 - mmengine - INFO - Epoch(train)  [1][ 585/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:08  time: 1.3661  data_time: 0.0213  loss: 1.2223  loss_cls: 0.9833  loss_bbox: 0.2390
2023/11/02 13:46:45 - mmengine - INFO - Epoch(train)  [1][ 590/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:53  time: 1.3605  data_time: 0.0211  loss: 1.2199  loss_cls: 0.9777  loss_bbox: 0.2421
2023/11/02 13:46:52 - mmengine - INFO - Epoch(train)  [1][ 595/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:04  time: 1.3619  data_time: 0.0213  loss: 1.2154  loss_cls: 0.9689  loss_bbox: 0.2465
2023/11/02 13:46:59 - mmengine - INFO - Epoch(train)  [1][ 600/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:00  time: 1.3614  data_time: 0.0215  loss: 1.1905  loss_cls: 0.9472  loss_bbox: 0.2433
2023/11/02 13:47:06 - mmengine - INFO - Epoch(train)  [1][ 605/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:05  time: 1.3553  data_time: 0.0212  loss: 1.1785  loss_cls: 0.9364  loss_bbox: 0.2421
2023/11/02 13:47:12 - mmengine - INFO - Epoch(train)  [1][ 610/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:02  time: 1.3541  data_time: 0.0213  loss: 1.1710  loss_cls: 0.9293  loss_bbox: 0.2417
2023/11/02 13:47:19 - mmengine - INFO - Epoch(train)  [1][ 615/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:04  time: 1.3514  data_time: 0.0212  loss: 1.1645  loss_cls: 0.9184  loss_bbox: 0.2460
2023/11/02 13:47:26 - mmengine - INFO - Epoch(train)  [1][ 620/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:35  time: 1.3431  data_time: 0.0211  loss: 1.1510  loss_cls: 0.9103  loss_bbox: 0.2407
2023/11/02 13:47:32 - mmengine - INFO - Epoch(train)  [1][ 625/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:57  time: 1.3397  data_time: 0.0209  loss: 1.1687  loss_cls: 0.9226  loss_bbox: 0.2461
2023/11/02 13:47:39 - mmengine - INFO - Epoch(train)  [1][ 630/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:52  time: 1.3395  data_time: 0.0208  loss: 1.1879  loss_cls: 0.9343  loss_bbox: 0.2536
2023/11/02 13:47:46 - mmengine - INFO - Epoch(train)  [1][ 635/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:32  time: 1.3360  data_time: 0.0210  loss: 1.1845  loss_cls: 0.9298  loss_bbox: 0.2547
2023/11/02 13:47:52 - mmengine - INFO - Epoch(train)  [1][ 640/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:02  time: 1.3397  data_time: 0.0211  loss: 1.1729  loss_cls: 0.9223  loss_bbox: 0.2506
2023/11/02 13:47:59 - mmengine - INFO - Epoch(train)  [1][ 645/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:10  time: 1.3350  data_time: 0.0208  loss: 1.1647  loss_cls: 0.9163  loss_bbox: 0.2484
2023/11/02 13:48:06 - mmengine - INFO - Epoch(train)  [1][ 650/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:21  time: 1.3364  data_time: 0.0211  loss: 1.1695  loss_cls: 0.9186  loss_bbox: 0.2508
2023/11/02 13:48:13 - mmengine - INFO - Epoch(train)  [1][ 655/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:10  time: 1.3398  data_time: 0.0218  loss: 1.1756  loss_cls: 0.9242  loss_bbox: 0.2513
2023/11/02 13:48:19 - mmengine - INFO - Epoch(train)  [1][ 660/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:41  time: 1.3429  data_time: 0.0217  loss: 1.1877  loss_cls: 0.9355  loss_bbox: 0.2522
2023/11/02 13:48:26 - mmengine - INFO - Epoch(train)  [1][ 665/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:51  time: 1.3442  data_time: 0.0217  loss: 1.1920  loss_cls: 0.9366  loss_bbox: 0.2554
2023/11/02 13:48:33 - mmengine - INFO - Epoch(train)  [1][ 670/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:02  time: 1.3477  data_time: 0.0219  loss: 1.1958  loss_cls: 0.9345  loss_bbox: 0.2613
2023/11/02 13:48:40 - mmengine - INFO - Epoch(train)  [1][ 675/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:47  time: 1.3500  data_time: 0.0217  loss: 1.1856  loss_cls: 0.9298  loss_bbox: 0.2558
2023/11/02 13:48:47 - mmengine - INFO - Epoch(train)  [1][ 680/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:05  time: 1.3522  data_time: 0.0217  loss: 1.1697  loss_cls: 0.9224  loss_bbox: 0.2473
2023/11/02 13:48:53 - mmengine - INFO - Epoch(train)  [1][ 685/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:17  time: 1.3551  data_time: 0.0214  loss: 1.1813  loss_cls: 0.9314  loss_bbox: 0.2499
2023/11/02 13:49:00 - mmengine - INFO - Epoch(train)  [1][ 690/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:17  time: 1.3528  data_time: 0.0213  loss: 1.1977  loss_cls: 0.9416  loss_bbox: 0.2561
2023/11/02 13:49:07 - mmengine - INFO - Epoch(train)  [1][ 695/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:54  time: 1.3558  data_time: 0.0219  loss: 1.1893  loss_cls: 0.9372  loss_bbox: 0.2521
2023/11/02 13:49:14 - mmengine - INFO - Epoch(train)  [1][ 700/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:48  time: 1.3545  data_time: 0.0219  loss: 1.1892  loss_cls: 0.9399  loss_bbox: 0.2493
2023/11/02 13:49:20 - mmengine - INFO - Epoch(train)  [1][ 705/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:19  time: 1.3586  data_time: 0.0215  loss: 1.1882  loss_cls: 0.9379  loss_bbox: 0.2503
2023/11/02 13:49:27 - mmengine - INFO - Epoch(train)  [1][ 710/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:38  time: 1.3579  data_time: 0.0214  loss: 1.1761  loss_cls: 0.9299  loss_bbox: 0.2462
2023/11/02 13:49:34 - mmengine - INFO - Epoch(train)  [1][ 715/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:54  time: 1.3535  data_time: 0.0214  loss: 1.1822  loss_cls: 0.9377  loss_bbox: 0.2445
2023/11/02 13:49:41 - mmengine - INFO - Epoch(train)  [1][ 720/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:57  time: 1.3530  data_time: 0.0209  loss: 1.1799  loss_cls: 0.9373  loss_bbox: 0.2426
2023/11/02 13:49:47 - mmengine - INFO - Epoch(train)  [1][ 725/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:33:10  time: 1.3505  data_time: 0.0212  loss: 1.1741  loss_cls: 0.9305  loss_bbox: 0.2436
2023/11/02 13:49:54 - mmengine - INFO - Epoch(train)  [1][ 730/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:33:05  time: 1.3486  data_time: 0.0212  loss: 1.1772  loss_cls: 0.9282  loss_bbox: 0.2490
2023/11/02 13:50:01 - mmengine - INFO - Epoch(train)  [1][ 735/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:57  time: 1.3469  data_time: 0.0219  loss: 1.1637  loss_cls: 0.9173  loss_bbox: 0.2464
2023/11/02 13:50:07 - mmengine - INFO - Epoch(train)  [1][ 740/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:56  time: 1.3412  data_time: 0.0217  loss: 1.1509  loss_cls: 0.9097  loss_bbox: 0.2412
2023/11/02 13:50:14 - mmengine - INFO - Epoch(train)  [1][ 745/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:32:07  time: 1.3390  data_time: 0.0214  loss: 1.1760  loss_cls: 0.9249  loss_bbox: 0.2511
2023/11/02 13:50:20 - mmengine - INFO - Epoch(train)  [1][ 750/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:39  time: 1.3369  data_time: 0.0212  loss: 1.1958  loss_cls: 0.9369  loss_bbox: 0.2589
2023/11/02 13:50:27 - mmengine - INFO - Epoch(train)  [1][ 755/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:58  time: 1.3300  data_time: 0.0211  loss: 1.1968  loss_cls: 0.9375  loss_bbox: 0.2593
2023/11/02 13:50:33 - mmengine - INFO - Epoch(train)  [1][ 760/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:11  time: 1.3236  data_time: 0.0213  loss: 1.1881  loss_cls: 0.9289  loss_bbox: 0.2591
2023/11/02 13:50:40 - mmengine - INFO - Epoch(train)  [1][ 765/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:33  time: 1.3183  data_time: 0.0213  loss: 1.1702  loss_cls: 0.9194  loss_bbox: 0.2508
2023/11/02 13:50:46 - mmengine - INFO - Epoch(train)  [1][ 770/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:01  time: 1.3148  data_time: 0.0215  loss: 1.1603  loss_cls: 0.9147  loss_bbox: 0.2455
2023/11/02 13:50:53 - mmengine - INFO - Epoch(train)  [1][ 775/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:04  time: 1.3138  data_time: 0.0215  loss: 1.1453  loss_cls: 0.9019  loss_bbox: 0.2433
2023/11/02 13:51:00 - mmengine - INFO - Epoch(train)  [1][ 780/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:07  time: 1.3146  data_time: 0.0217  loss: 1.1386  loss_cls: 0.8959  loss_bbox: 0.2427
2023/11/02 13:51:07 - mmengine - INFO - Epoch(train)  [1][ 785/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:22  time: 1.3168  data_time: 0.0212  loss: 1.1332  loss_cls: 0.8921  loss_bbox: 0.2411
2023/11/02 13:51:13 - mmengine - INFO - Epoch(train)  [1][ 790/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:55  time: 1.3198  data_time: 0.0214  loss: 1.1264  loss_cls: 0.8825  loss_bbox: 0.2438
2023/11/02 13:51:20 - mmengine - INFO - Epoch(train)  [1][ 795/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:54  time: 1.3124  data_time: 0.0220  loss: 1.0977  loss_cls: 0.8588  loss_bbox: 0.2390
2023/11/02 13:51:26 - mmengine - INFO - Epoch(train)  [1][ 800/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:59  time: 1.3156  data_time: 0.0222  loss: 1.0866  loss_cls: 0.8521  loss_bbox: 0.2345
2023/11/02 13:51:33 - mmengine - INFO - Epoch(train)  [1][ 805/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:42  time: 1.3178  data_time: 0.0222  loss: 1.0800  loss_cls: 0.8477  loss_bbox: 0.2323
2023/11/02 13:51:39 - mmengine - INFO - Epoch(train)  [1][ 810/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:08  time: 1.3188  data_time: 0.0225  loss: 1.0690  loss_cls: 0.8408  loss_bbox: 0.2282
2023/11/02 13:51:46 - mmengine - INFO - Epoch(train)  [1][ 815/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:31  time: 1.3251  data_time: 0.0222  loss: 1.0712  loss_cls: 0.8408  loss_bbox: 0.2303
2023/11/02 13:51:53 - mmengine - INFO - Epoch(train)  [1][ 820/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:28  time: 1.3279  data_time: 0.0225  loss: 1.0730  loss_cls: 0.8394  loss_bbox: 0.2337
2023/11/02 13:52:00 - mmengine - INFO - Epoch(train)  [1][ 825/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:25  time: 1.3273  data_time: 0.0223  loss: 1.0746  loss_cls: 0.8412  loss_bbox: 0.2335
2023/11/02 13:52:06 - mmengine - INFO - Epoch(train)  [1][ 830/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:51  time: 1.3233  data_time: 0.0217  loss: 1.0672  loss_cls: 0.8386  loss_bbox: 0.2286
2023/11/02 13:52:12 - mmengine - INFO - Epoch(train)  [1][ 835/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:07  time: 1.3170  data_time: 0.0218  loss: 1.0579  loss_cls: 0.8310  loss_bbox: 0.2268
2023/11/02 13:52:19 - mmengine - INFO - Epoch(train)  [1][ 840/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:34  time: 1.3161  data_time: 0.0215  loss: 1.0554  loss_cls: 0.8310  loss_bbox: 0.2244
2023/11/02 13:52:26 - mmengine - INFO - Epoch(train)  [1][ 845/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:04  time: 1.3191  data_time: 0.0211  loss: 1.0681  loss_cls: 0.8456  loss_bbox: 0.2225
2023/11/02 13:52:32 - mmengine - INFO - Epoch(train)  [1][ 850/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:37  time: 1.3222  data_time: 0.0211  loss: 1.0578  loss_cls: 0.8357  loss_bbox: 0.2221
2023/11/02 13:52:39 - mmengine - INFO - Epoch(train)  [1][ 855/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:46  time: 1.3250  data_time: 0.0209  loss: 1.0584  loss_cls: 0.8304  loss_bbox: 0.2280
2023/11/02 13:52:46 - mmengine - INFO - Epoch(train)  [1][ 860/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:55  time: 1.3297  data_time: 0.0212  loss: 1.0768  loss_cls: 0.8418  loss_bbox: 0.2349
2023/11/02 13:52:52 - mmengine - INFO - Epoch(train)  [1][ 865/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:25  time: 1.3239  data_time: 0.0211  loss: 1.0707  loss_cls: 0.8358  loss_bbox: 0.2348
2023/11/02 13:52:59 - mmengine - INFO - Epoch(train)  [1][ 870/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:05  time: 1.3219  data_time: 0.0210  loss: 1.0661  loss_cls: 0.8353  loss_bbox: 0.2307
2023/11/02 13:53:05 - mmengine - INFO - Epoch(train)  [1][ 875/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:13  time: 1.3162  data_time: 0.0211  loss: 1.0776  loss_cls: 0.8450  loss_bbox: 0.2326
2023/11/02 13:53:12 - mmengine - INFO - Epoch(train)  [1][ 880/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:31  time: 1.3220  data_time: 0.0218  loss: 1.0748  loss_cls: 0.8420  loss_bbox: 0.2328
2023/11/02 13:53:19 - mmengine - INFO - Epoch(train)  [1][ 885/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:19  time: 1.3254  data_time: 0.0220  loss: 1.0992  loss_cls: 0.8603  loss_bbox: 0.2389
2023/11/02 13:53:25 - mmengine - INFO - Epoch(train)  [1][ 890/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:48  time: 1.3255  data_time: 0.0225  loss: 1.1124  loss_cls: 0.8725  loss_bbox: 0.2399
2023/11/02 13:53:32 - mmengine - INFO - Epoch(train)  [1][ 895/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:14  time: 1.3248  data_time: 0.0224  loss: 1.1010  loss_cls: 0.8596  loss_bbox: 0.2413
2023/11/02 13:53:39 - mmengine - INFO - Epoch(train)  [1][ 900/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:04  time: 1.3270  data_time: 0.0226  loss: 1.1006  loss_cls: 0.8596  loss_bbox: 0.2411
2023/11/02 13:53:45 - mmengine - INFO - Epoch(train)  [1][ 905/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:28  time: 1.3218  data_time: 0.0226  loss: 1.1148  loss_cls: 0.8743  loss_bbox: 0.2405
2023/11/02 13:53:52 - mmengine - INFO - Epoch(train)  [1][ 910/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:10  time: 1.3257  data_time: 0.0222  loss: 1.1257  loss_cls: 0.8855  loss_bbox: 0.2402
2023/11/02 13:53:59 - mmengine - INFO - Epoch(train)  [1][ 915/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:16  time: 1.3299  data_time: 0.0227  loss: 1.1256  loss_cls: 0.8863  loss_bbox: 0.2393
2023/11/02 13:54:06 - mmengine - INFO - Epoch(train)  [1][ 920/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:26  time: 1.3335  data_time: 0.0228  loss: 1.1375  loss_cls: 0.8937  loss_bbox: 0.2438
2023/11/02 13:54:12 - mmengine - INFO - Epoch(train)  [1][ 925/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:54  time: 1.3429  data_time: 0.0230  loss: 1.1300  loss_cls: 0.8885  loss_bbox: 0.2414
2023/11/02 13:54:19 - mmengine - INFO - Epoch(train)  [1][ 930/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:02  time: 1.3418  data_time: 0.0231  loss: 1.1331  loss_cls: 0.8919  loss_bbox: 0.2412
2023/11/02 13:54:26 - mmengine - INFO - Epoch(train)  [1][ 935/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:39  time: 1.3406  data_time: 0.0224  loss: 1.1084  loss_cls: 0.8743  loss_bbox: 0.2341
2023/11/02 13:54:32 - mmengine - INFO - Epoch(train)  [1][ 940/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:37  time: 1.3439  data_time: 0.0223  loss: 1.0981  loss_cls: 0.8694  loss_bbox: 0.2287
2023/11/02 13:54:39 - mmengine - INFO - Epoch(train)  [1][ 945/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:15  time: 1.3453  data_time: 0.0227  loss: 1.0847  loss_cls: 0.8627  loss_bbox: 0.2220
2023/11/02 13:54:46 - mmengine - INFO - Epoch(train)  [1][ 950/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:43  time: 1.3356  data_time: 0.0226  loss: 1.1009  loss_cls: 0.8727  loss_bbox: 0.2282
2023/11/02 13:54:52 - mmengine - INFO - Epoch(train)  [1][ 955/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:46  time: 1.3403  data_time: 0.0229  loss: 1.0731  loss_cls: 0.8518  loss_bbox: 0.2214
2023/11/02 13:54:59 - mmengine - INFO - Epoch(train)  [1][ 960/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:42  time: 1.3350  data_time: 0.0228  loss: 1.0576  loss_cls: 0.8408  loss_bbox: 0.2168
2023/11/02 13:55:05 - mmengine - INFO - Epoch(train)  [1][ 965/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:14  time: 1.3307  data_time: 0.0225  loss: 1.0456  loss_cls: 0.8309  loss_bbox: 0.2148
2023/11/02 13:55:12 - mmengine - INFO - Epoch(train)  [1][ 970/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:22:46  time: 1.3260  data_time: 0.0224  loss: 1.0337  loss_cls: 0.8204  loss_bbox: 0.2133
2023/11/02 13:55:18 - mmengine - INFO - Epoch(train)  [1][ 975/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:50  time: 1.3154  data_time: 0.0223  loss: 1.0501  loss_cls: 0.8277  loss_bbox: 0.2224
2023/11/02 13:55:25 - mmengine - INFO - Epoch(train)  [1][ 980/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:22:19  time: 1.3182  data_time: 0.0220  loss: 1.0492  loss_cls: 0.8253  loss_bbox: 0.2239
2023/11/02 13:55:32 - mmengine - INFO - Epoch(train)  [1][ 985/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:53  time: 1.3176  data_time: 0.0223  loss: 1.0553  loss_cls: 0.8278  loss_bbox: 0.2275
2023/11/02 13:55:38 - mmengine - INFO - Epoch(train)  [1][ 990/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:21:56  time: 1.3183  data_time: 0.0222  loss: 1.0551  loss_cls: 0.8242  loss_bbox: 0.2309
2023/11/02 13:55:45 - mmengine - INFO - Epoch(train)  [1][ 995/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:22:06  time: 1.3224  data_time: 0.0221  loss: 1.0451  loss_cls: 0.8141  loss_bbox: 0.2310
2023/11/02 13:55:52 - mmengine - INFO - Exp name: basic_config_20231102_133330
2023/11/02 13:55:52 - mmengine - INFO - Epoch(train)  [1][1000/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:06  time: 1.3341  data_time: 0.0221  loss: 1.0213  loss_cls: 0.7983  loss_bbox: 0.2231
2023/11/02 13:55:59 - mmengine - INFO - Epoch(train)  [1][1005/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:25  time: 1.3363  data_time: 0.0221  loss: 1.0179  loss_cls: 0.7953  loss_bbox: 0.2226
2023/11/02 13:56:06 - mmengine - INFO - Epoch(train)  [1][1010/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:23:26  time: 1.3370  data_time: 0.0222  loss: 1.0066  loss_cls: 0.7819  loss_bbox: 0.2247
2023/11/02 13:56:13 - mmengine - INFO - Epoch(train)  [1][1015/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:14  time: 1.3470  data_time: 0.0224  loss: 1.0232  loss_cls: 0.7953  loss_bbox: 0.2279
2023/11/02 13:56:20 - mmengine - INFO - Epoch(train)  [1][1020/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:24:27  time: 1.3525  data_time: 0.0225  loss: 1.0330  loss_cls: 0.8027  loss_bbox: 0.2303
2023/11/02 13:56:26 - mmengine - INFO - Epoch(train)  [1][1025/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:01  time: 1.3644  data_time: 0.0226  loss: 1.0172  loss_cls: 0.7941  loss_bbox: 0.2231
2023/11/02 13:56:33 - mmengine - INFO - Epoch(train)  [1][1030/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:22  time: 1.3637  data_time: 0.0223  loss: 1.0074  loss_cls: 0.7878  loss_bbox: 0.2196
2023/11/02 13:56:40 - mmengine - INFO - Epoch(train)  [1][1035/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:25:41  time: 1.3698  data_time: 0.0228  loss: 1.0191  loss_cls: 0.7981  loss_bbox: 0.2209
2023/11/02 13:56:47 - mmengine - INFO - Epoch(train)  [1][1040/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:19  time: 1.3749  data_time: 0.0229  loss: 1.0124  loss_cls: 0.7931  loss_bbox: 0.2193
2023/11/02 13:56:54 - mmengine - INFO - Epoch(train)  [1][1045/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:45  time: 1.3773  data_time: 0.0229  loss: 1.0173  loss_cls: 0.7968  loss_bbox: 0.2204
2023/11/02 13:57:01 - mmengine - INFO - Epoch(train)  [1][1050/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:59  time: 1.3718  data_time: 0.0228  loss: 1.0208  loss_cls: 0.8003  loss_bbox: 0.2205
2023/11/02 13:57:08 - mmengine - INFO - Epoch(train)  [1][1055/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:27  time: 1.3733  data_time: 0.0228  loss: 1.0351  loss_cls: 0.8090  loss_bbox: 0.2260
2023/11/02 13:57:14 - mmengine - INFO - Epoch(train)  [1][1060/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:35  time: 1.3745  data_time: 0.0225  loss: 1.0376  loss_cls: 0.8109  loss_bbox: 0.2267
2023/11/02 13:57:21 - mmengine - INFO - Epoch(train)  [1][1065/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:45  time: 1.3698  data_time: 0.0226  loss: 1.0368  loss_cls: 0.8120  loss_bbox: 0.2248
2023/11/02 13:57:28 - mmengine - INFO - Epoch(train)  [1][1070/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:03  time: 1.3708  data_time: 0.0225  loss: 1.0267  loss_cls: 0.8076  loss_bbox: 0.2191
2023/11/02 13:57:35 - mmengine - INFO - Epoch(train)  [1][1075/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:56  time: 1.3654  data_time: 0.0225  loss: 1.0334  loss_cls: 0.8114  loss_bbox: 0.2220
2023/11/02 13:57:42 - mmengine - INFO - Epoch(train)  [1][1080/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:19  time: 1.3661  data_time: 0.0229  loss: 1.0618  loss_cls: 0.8292  loss_bbox: 0.2326
2023/11/02 13:57:48 - mmengine - INFO - Epoch(train)  [1][1085/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:09  time: 1.3624  data_time: 0.0225  loss: 1.0544  loss_cls: 0.8202  loss_bbox: 0.2343
2023/11/02 13:57:55 - mmengine - INFO - Epoch(train)  [1][1090/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:46  time: 1.3626  data_time: 0.0227  loss: 1.0584  loss_cls: 0.8226  loss_bbox: 0.2358
2023/11/02 13:58:02 - mmengine - INFO - Epoch(train)  [1][1095/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:17  time: 1.3637  data_time: 0.0224  loss: 1.0771  loss_cls: 0.8363  loss_bbox: 0.2408
2023/11/02 13:58:09 - mmengine - INFO - Epoch(train)  [1][1100/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:33  time: 1.3641  data_time: 0.0225  loss: 1.0921  loss_cls: 0.8413  loss_bbox: 0.2508
2023/11/02 13:58:16 - mmengine - INFO - Epoch(train)  [1][1105/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:45  time: 1.3623  data_time: 0.0221  loss: 1.0818  loss_cls: 0.8340  loss_bbox: 0.2479
2023/11/02 13:58:23 - mmengine - INFO - Epoch(train)  [1][1110/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:50  time: 1.3620  data_time: 0.0225  loss: 1.0888  loss_cls: 0.8397  loss_bbox: 0.2491
2023/11/02 13:58:29 - mmengine - INFO - Epoch(train)  [1][1115/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:50  time: 1.3609  data_time: 0.0221  loss: 1.0938  loss_cls: 0.8405  loss_bbox: 0.2533
2023/11/02 13:58:36 - mmengine - INFO - Epoch(train)  [1][1120/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:11  time: 1.3617  data_time: 0.0221  loss: 1.0978  loss_cls: 0.8380  loss_bbox: 0.2598
2023/11/02 13:58:43 - mmengine - INFO - Epoch(train)  [1][1125/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:45  time: 1.3678  data_time: 0.0221  loss: 1.0901  loss_cls: 0.8305  loss_bbox: 0.2596
2023/11/02 13:58:50 - mmengine - INFO - Epoch(train)  [1][1130/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:12  time: 1.3687  data_time: 0.0222  loss: 1.0520  loss_cls: 0.8020  loss_bbox: 0.2500
2023/11/02 13:58:57 - mmengine - INFO - Epoch(train)  [1][1135/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:35  time: 1.3737  data_time: 0.0224  loss: 1.0455  loss_cls: 0.7986  loss_bbox: 0.2468
2023/11/02 13:59:04 - mmengine - INFO - Epoch(train)  [1][1140/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:31:18  time: 1.3662  data_time: 0.0223  loss: 1.0429  loss_cls: 0.7938  loss_bbox: 0.2491
2023/11/02 13:59:10 - mmengine - INFO - Epoch(train)  [1][1145/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:46  time: 1.3571  data_time: 0.0226  loss: 1.0347  loss_cls: 0.7849  loss_bbox: 0.2498
2023/11/02 13:59:17 - mmengine - INFO - Epoch(train)  [1][1150/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:30:15  time: 1.3504  data_time: 0.0224  loss: 1.0228  loss_cls: 0.7800  loss_bbox: 0.2428
2023/11/02 13:59:23 - mmengine - INFO - Epoch(train)  [1][1155/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:30  time: 1.3417  data_time: 0.0226  loss: 1.0156  loss_cls: 0.7757  loss_bbox: 0.2399
2023/11/02 13:59:29 - mmengine - INFO - Epoch(train)  [1][1160/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:41  time: 1.3337  data_time: 0.0225  loss: 0.9906  loss_cls: 0.7588  loss_bbox: 0.2318
2023/11/02 13:59:36 - mmengine - INFO - Epoch(train)  [1][1165/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:25  time: 1.3313  data_time: 0.0225  loss: 0.9703  loss_cls: 0.7414  loss_bbox: 0.2290
2023/11/02 13:59:43 - mmengine - INFO - Epoch(train)  [1][1170/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:25  time: 1.3282  data_time: 0.0225  loss: 0.9619  loss_cls: 0.7388  loss_bbox: 0.2231
2023/11/02 13:59:49 - mmengine - INFO - Epoch(train)  [1][1175/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:12  time: 1.3213  data_time: 0.0223  loss: 0.9461  loss_cls: 0.7293  loss_bbox: 0.2168
2023/11/02 13:59:56 - mmengine - INFO - Epoch(train)  [1][1180/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:44  time: 1.3222  data_time: 0.0220  loss: 0.9569  loss_cls: 0.7362  loss_bbox: 0.2207
2023/11/02 14:00:03 - mmengine - INFO - Epoch(train)  [1][1185/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:35  time: 1.3173  data_time: 0.0218  loss: 0.9596  loss_cls: 0.7380  loss_bbox: 0.2215
2023/11/02 14:00:10 - mmengine - INFO - Epoch(train)  [1][1190/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:41  time: 1.3208  data_time: 0.0218  loss: 0.9662  loss_cls: 0.7422  loss_bbox: 0.2241
2023/11/02 14:00:16 - mmengine - INFO - Epoch(train)  [1][1195/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:58  time: 1.3283  data_time: 0.0218  loss: 0.9692  loss_cls: 0.7492  loss_bbox: 0.2201
2023/11/02 14:00:23 - mmengine - INFO - Epoch(train)  [1][1200/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:11  time: 1.3349  data_time: 0.0222  loss: 0.9642  loss_cls: 0.7464  loss_bbox: 0.2178
2023/11/02 14:00:30 - mmengine - INFO - Epoch(train)  [1][1205/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:47  time: 1.3381  data_time: 0.0223  loss: 0.9714  loss_cls: 0.7538  loss_bbox: 0.2177
2023/11/02 14:00:37 - mmengine - INFO - Epoch(train)  [1][1210/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:52  time: 1.3465  data_time: 0.0225  loss: 0.9842  loss_cls: 0.7631  loss_bbox: 0.2211
2023/11/02 14:00:43 - mmengine - INFO - Epoch(train)  [1][1215/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:31  time: 1.3456  data_time: 0.0227  loss: 0.9979  loss_cls: 0.7751  loss_bbox: 0.2228
2023/11/02 14:00:50 - mmengine - INFO - Epoch(train)  [1][1220/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:17  time: 1.3435  data_time: 0.0223  loss: 0.9873  loss_cls: 0.7649  loss_bbox: 0.2224
2023/11/02 14:00:57 - mmengine - INFO - Epoch(train)  [1][1225/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:42  time: 1.3495  data_time: 0.0227  loss: 0.9911  loss_cls: 0.7665  loss_bbox: 0.2246
2023/11/02 14:01:04 - mmengine - INFO - Epoch(train)  [1][1230/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:22  time: 1.3513  data_time: 0.0234  loss: 0.9908  loss_cls: 0.7666  loss_bbox: 0.2243
2023/11/02 14:01:11 - mmengine - INFO - Epoch(train)  [1][1235/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:28  time: 1.3536  data_time: 0.0236  loss: 0.9761  loss_cls: 0.7544  loss_bbox: 0.2216
2023/11/02 14:01:17 - mmengine - INFO - Epoch(train)  [1][1240/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:05  time: 1.3491  data_time: 0.0238  loss: 0.9576  loss_cls: 0.7413  loss_bbox: 0.2163
2023/11/02 14:01:24 - mmengine - INFO - Epoch(train)  [1][1245/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:39  time: 1.3422  data_time: 0.0235  loss: 0.9582  loss_cls: 0.7420  loss_bbox: 0.2162
2023/11/02 14:01:30 - mmengine - INFO - Epoch(train)  [1][1250/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:39  time: 1.3404  data_time: 0.0233  loss: 0.9508  loss_cls: 0.7353  loss_bbox: 0.2155
2023/11/02 14:01:37 - mmengine - INFO - Epoch(train)  [1][1255/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:39  time: 1.3442  data_time: 0.0237  loss: 0.9542  loss_cls: 0.7332  loss_bbox: 0.2211
2023/11/02 14:01:44 - mmengine - INFO - Epoch(train)  [1][1260/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:50  time: 1.3453  data_time: 0.0234  loss: 0.9762  loss_cls: 0.7495  loss_bbox: 0.2267
2023/11/02 14:01:51 - mmengine - INFO - Epoch(train)  [1][1265/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:22  time: 1.3541  data_time: 0.0235  loss: 0.9837  loss_cls: 0.7580  loss_bbox: 0.2257
2023/11/02 14:01:58 - mmengine - INFO - Epoch(train)  [1][1270/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:24  time: 1.3567  data_time: 0.0236  loss: 0.9978  loss_cls: 0.7612  loss_bbox: 0.2366
2023/11/02 14:02:04 - mmengine - INFO - Epoch(train)  [1][1275/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:29:13  time: 1.3510  data_time: 0.0236  loss: 1.0021  loss_cls: 0.7602  loss_bbox: 0.2419
2023/11/02 14:02:11 - mmengine - INFO - Epoch(train)  [1][1280/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:50  time: 1.3408  data_time: 0.0230  loss: 1.0050  loss_cls: 0.7605  loss_bbox: 0.2446
2023/11/02 14:02:17 - mmengine - INFO - Epoch(train)  [1][1285/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:19  time: 1.3346  data_time: 0.0228  loss: 1.0143  loss_cls: 0.7675  loss_bbox: 0.2469
2023/11/02 14:02:24 - mmengine - INFO - Epoch(train)  [1][1290/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:19  time: 1.3384  data_time: 0.0227  loss: 1.0315  loss_cls: 0.7818  loss_bbox: 0.2497
2023/11/02 14:02:30 - mmengine - INFO - Epoch(train)  [1][1295/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:49  time: 1.3377  data_time: 0.0225  loss: 1.0264  loss_cls: 0.7740  loss_bbox: 0.2524
2023/11/02 14:02:37 - mmengine - INFO - Epoch(train)  [1][1300/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:18  time: 1.3324  data_time: 0.0222  loss: 1.0355  loss_cls: 0.7746  loss_bbox: 0.2609
2023/11/02 14:02:44 - mmengine - INFO - Epoch(train)  [1][1305/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:07  time: 1.3306  data_time: 0.0218  loss: 1.0463  loss_cls: 0.7784  loss_bbox: 0.2679
2023/11/02 14:02:50 - mmengine - INFO - Epoch(train)  [1][1310/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:59  time: 1.3273  data_time: 0.0219  loss: 1.0372  loss_cls: 0.7689  loss_bbox: 0.2683
2023/11/02 14:02:57 - mmengine - INFO - Epoch(train)  [1][1315/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:27  time: 1.3165  data_time: 0.0217  loss: 1.0269  loss_cls: 0.7596  loss_bbox: 0.2673
2023/11/02 14:03:04 - mmengine - INFO - Epoch(train)  [1][1320/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:40  time: 1.3184  data_time: 0.0216  loss: 1.0169  loss_cls: 0.7568  loss_bbox: 0.2601
2023/11/02 14:03:10 - mmengine - INFO - Epoch(train)  [1][1325/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:51  time: 1.3222  data_time: 0.0211  loss: 1.0048  loss_cls: 0.7450  loss_bbox: 0.2597
2023/11/02 14:03:17 - mmengine - INFO - Epoch(train)  [1][1330/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:41  time: 1.3241  data_time: 0.0210  loss: 0.9871  loss_cls: 0.7345  loss_bbox: 0.2526
2023/11/02 14:03:24 - mmengine - INFO - Epoch(train)  [1][1335/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:38  time: 1.3291  data_time: 0.0213  loss: 0.9849  loss_cls: 0.7329  loss_bbox: 0.2520
2023/11/02 14:03:30 - mmengine - INFO - Epoch(train)  [1][1340/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:36  time: 1.3287  data_time: 0.0214  loss: 0.9829  loss_cls: 0.7320  loss_bbox: 0.2509
2023/11/02 14:03:37 - mmengine - INFO - Epoch(train)  [1][1345/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:26:45  time: 1.3354  data_time: 0.0223  loss: 0.9924  loss_cls: 0.7421  loss_bbox: 0.2503
2023/11/02 14:03:44 - mmengine - INFO - Epoch(train)  [1][1350/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:14  time: 1.3458  data_time: 0.0224  loss: 0.9870  loss_cls: 0.7423  loss_bbox: 0.2446
2023/11/02 14:03:51 - mmengine - INFO - Epoch(train)  [1][1355/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:20  time: 1.3490  data_time: 0.0227  loss: 0.9789  loss_cls: 0.7425  loss_bbox: 0.2364
2023/11/02 14:03:58 - mmengine - INFO - Epoch(train)  [1][1360/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:11  time: 1.3489  data_time: 0.0228  loss: 0.9685  loss_cls: 0.7362  loss_bbox: 0.2324
2023/11/02 14:04:05 - mmengine - INFO - Epoch(train)  [1][1365/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:33  time: 1.3584  data_time: 0.0231  loss: 0.9741  loss_cls: 0.7370  loss_bbox: 0.2372
2023/11/02 14:04:11 - mmengine - INFO - Epoch(train)  [1][1370/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:27:43  time: 1.3580  data_time: 0.0231  loss: 0.9883  loss_cls: 0.7501  loss_bbox: 0.2382
2023/11/02 14:04:18 - mmengine - INFO - Epoch(train)  [1][1375/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:13  time: 1.3616  data_time: 0.0234  loss: 0.9987  loss_cls: 0.7602  loss_bbox: 0.2385
2023/11/02 14:04:25 - mmengine - INFO - Epoch(train)  [1][1380/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:16  time: 1.3641  data_time: 0.0232  loss: 1.0226  loss_cls: 0.7751  loss_bbox: 0.2475
2023/11/02 14:04:32 - mmengine - INFO - Epoch(train)  [1][1385/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:24  time: 1.3662  data_time: 0.0234  loss: 1.0164  loss_cls: 0.7692  loss_bbox: 0.2471
2023/11/02 14:04:39 - mmengine - INFO - Epoch(train)  [1][1390/5119]  base_lr: 8.0000e-05 lr: 8.0000e-05  eta: 2 days, 8:28:20  time: 1.3660  data_time: 0.0231  loss: 1.0069  loss_cls: 0.7581  loss_bbox: 0.2488
